const keyboard = require("../keyboard/keyboard");

function run1(ctx) {
  let answer =
    "<b>База данных</b>\n\n" +
    "DESCRIBE schema.table_name;\n\n" +
    "- соглашение об именовании;\n" +
    "- количество полей\n" +
    "- тип данных, длина, IS NOT NULL;\n" +
    "- первичный ключ;\n\n" +
    "- дубликат значений;\n" +
    "- символы в названии, пробелы;\n" +
    "- отрицательный процент;\n\n" +
    "- правильность расчета;\n" +
    "- операции CRUD;\n" +
    "- пароли, номера карт не храняться как простой текст.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run2(ctx) {
  let answer =
    "<b>ETL процесс</b>\n\n" +
    "- проверить источник данных;\n" +
    "- количество отклоненных записей;\n" +
    "- дублирование загруженных данных;\n" +
    "- преобразование данных;\n" +
    "- значения по умолчанию верны.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run3(ctx) {
  let answer =
    "<b>API</b>\n\n" +
    "- запрос: заголовки, параметры, тело;\n" +
    "- ответ: код, заголовки, тело;\n" +
    "- правильность расчета, сортировки;\n" +
    "- нагрузочное тестирование.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run4(ctx) {
  let answer =
    "<b>Логирование</b>\n\n" +
    "- уровень логирования;\n" +
    "- размер лог-файла;\n" +
    "- срок хранения логов;\n" +
    "- обработка событий при отсутствии свободного места на сервере (вызывать ошибки в работе API для заполнения логами свободного места).";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run5(ctx) {
  let answer =
    "<b>Удобство использования</b>\n\n" +
    "Принцип — <b><u>не заставляй меня думать</u></b>.\n\n" +
    "<b>навигация</b>\n" +
    '- "хлебные крошки";\n' +
    '- кнопка "вверх";\n' +
    "- группировка элементов;\n" +
    "- меню, поиск;\n" +
    "- визарды (последовательность шагов при регистрации, установке).\n\n" +
    "<b>курсор</b>\n" +
    '- "курсор по умолчанию" (стрелка) для неактивных элементов;\n' +
    '- "курсор-рука" (палец) для кликабельных элементов;\n' +
    '- "курсор изменить размер" (стрелки вправо-влево) для изменяемых размер элементов;\n' +
    '- "курсор перемещение" (ладонь) для элементов, которые разрешено перетаскивать;\n' +
    '- "курсор выделение" (вертикальная черта) для поля ввода, контента для копирования.\n\n' +
    "<b>подсказки</b>\n" +
    "- обязательность заполнения;\n" +
    "- плейсхолдер;\n" +
    "- размер, тип, длина значений;\n" +
    "- технические ограничения на ввод;\n" +
    "- title - подсказка при наведении.\n\n" +
    "<b>сообщения об ошибках</b>\n" +
    "- понятность;\n" +
    "- краткость;\n" +
    "- однозначность.\n\n" +
    "<b>инструкция пользователя</b>\n" +
    "- актуальность.\n\n" +
    "<b>текст</b>\n" +
    "- заголовки до 10 слов;\n" +
    "- абзац не более 3-5 предложений, предложение не более 10-15 слов;\n" +
    "- строка не более 50-75 символов для десктоп, 30-40 для мобильных;\n" +
    "- межстрочный интервал на 30% больше высоты символов;\n" +
    "- выделение ключевых слов, ссылок.\n\n";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run6(ctx) {
  let answer =
    "<b>Локализация</b>\n\n" +
    "<b>Интернационализация (18n)</b> — программное и аппратное обеспечение для упрощения адаптации продукта к использованию в других языковых и культурных регионах. Производится на начальных этапах разработки.\n\n" +
    "<b>Локализация (L10n)</b> — добавление специальных функций для использования в определенном регионе. Проводится для каждого целевого языка.\n" +
    "- название элементов, сообщений, мета-информации, инструкций;\n" +
    "- формат даты, времени, адреса, телефона;\n" +
    "- разделитель разрядности числа, копеек, отрицательные числа;\n" +
    "- валюта, мера, шрифт;\n" +
    "- ограничения цветов, чисел, музыки, фото, видео;\n" +
    "- культурные особенности.\n\n" +
    "<b>проверки</b>\n" +
    "- язык по умолчанию;\n" +
    "- переключение исходной и локализованных версий, редиректы;\n" +
    "- стандарты отображения знаков препинания;\n" +
    "- целостность верстки после перевода элементов интерфейса;\n" +
    "- направление написания текста;\n" +
    "- параметры шрифтов;\n\n" +
    "- полнота перевода:\n" +
    "    - языковые файлы (json, yaml, xml);\n" +
    "    - сокращеня и аббревиатуры;\n" +
    "    - имена, географические названия;\n" +
    "    - элементы интерфейса;\n" +
    "    - системные сообщения и ошибки;\n" +
    "    - инструкция пользователя;\n" +
    '    - форма "Свяжитесь с нами".\n\n' +
    "- форматирование и маски:\n" +
    "    - вид и конвертация валюты;\n" +
    "    - числа;\n" +
    "    - даты (дд.мм.гггг, мм-дд-гггг);\n" +
    "    - время (часовой пояс, АМ/РМ, 12/24);\n" +
    "    - номер телефона;\n" +
    "    - индекс, адрес.\n\n" +
    "- система мер и весов:\n" +
    "    - вес (кг, фунты);\n" +
    "    - длина (метры, футы, дюймы);\n" +
    "    - размер одежды и обуви;\n" +
    "    - температура (°C, °F).\n\n" +
    "- ограничения на поле ввода имени и фамилии;;\n" +
    "- изображения картинок и фотографий на предмет религиозных особенностей;\n" +
    "- соотвествие правовым требованиям и местным законам (соглашение о конфиденциальности, условия использования сервиса и т.п.);\n" +
    "- контроль символики и цветов;\n" +
    "- запреты интеграции со сторонними ресурсами;\n" +
    "- поддержка региональных раскладок клавиатур и работа горячих клавиш;\n" +
    '- перевод мета-тегов (влияет на "SEO");\n' +
    "- перевод alt, title подписей к тексту, изображениям, ссылкам;\n" +
    "- настройка системы веб-аналитики (метрики, коды, счетчики).";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run7(ctx) {
  let answer =
    "<b>Портативность, адаптивность</b>\n\n" +
    "<b>портативность</b> (переносимость) — способность программы работать в различном окружении\n" +
    "- разные экраны;\n" +
    "- разные браузеры;\n" +
    "- разные операционные системы;\n" +
    "- местоположение пользователя;\n" +
    "- часовой пояс;\n" +
    "- время, дни недели, сезон;\n" +
    "- скорость интернета.\n\n" +
    "<b>адаптивность</b> (размер и разрешение)\n" +
    '- меню, "хлебные крошки";\n' +
    "- графики, диаграммы;\n" +
    "- иконки, картинки;\n" +
    "- таблицы;\n" +
    '- кнопка "вверх", горизонтальный скрол.\n\n' +
    "<b>кроссбраузерность</b>\n" +
    "- проверка в браузерах с которых наиболее вероятно и часто приходит клиент на сайт (яндекс-метрики, гугл-аналитика);\n" +
    "- основные браузеры и их версии: Chrome, Firefox, Edge, Safari.\n\n" +
    "<b>кроссплатформенность</b>\n" +
    "- проверка в операционных системах с которых наиболее вероятно и часто приходит клиент на сайт (яндекс-метрики, гугл-аналитика);\n" +
    "- основные операционные системы и их версии: Android, Windows, iOS, Linux;\n" +
    "- обратить внимание:\n" +
    "    - слеш в пути;\n" +
    "    - перевод строки \\n,\\r;\n" +
    "    - регистр в названии;\n" +
    "    - работа с архивом.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run8(ctx) {
  let answer =
    "<b>Доступность</b>\n\n" +
    "- соответствие рекомендациям WCAG;\n" +
    "- соответствие рекомендациям W3C;\n" +
    "- перемещение с помощью клавиатуры (клавиатурная навигация);\n" +
    "- перемещение с помощью программы чтения с экрана NVDA;\n" +
    "- перемещение с помощью программы распознавания речи Apple VoiceOver;\n" +
    "- набор текста с помощью клавиатуры, специально разработанной для людей с двигательными нарушениями;\n" +
    "- просмотр контента с помощью программы для увеличения экрана (экранная лупа);\n" +
    "- проверка цветового контраста.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run9(ctx) {
  let answer =
    "<b>SEO</b>\n\n" +
    "<b>url</b>\n" +
    "- название латиницей;\n" +
    "- категории м подкатегории разделять /;\n" +
    "- разделять слова через -, а не _;\n" +
    "- отсутствие пробелов.\n\n" +
    "<b>анализ тегов и метатегов</b>\n" +
    "- title = 60-70 char, uniq, title+companyName;\n" +
    "- description = 120-160 char, uniq, должен быть призыв к действию;\n" +
    "- заголовки h1-h6, h1 один на странице;\n" +
    "- уникальность title, description, h1 на странице / в пределах сайта;\n" +
    '- исходящие ссылки: target="_blank", rel="noopener noreferrer nofollow", где noopener, noreferrer - для безопасности, nofollow - не отдавать "seo-вес" своего сайта;\n' +
    "- циклические ссылки (сам на себя): логотип на главной странице, пункты меню, хлебные крошки последний пункт, статьи;\n" +
    "- картинки с отсутствующим атрибутом alt, title; размер картинки до 100Кб.\n\n" +
    "<b>анализ разделов</b>\n" +
    "- контакты;\n" +
    "- карта сайта;\n" +
    "- политика конфиденциальности;\n" +
    "- отказ от ответственности;\n" +
    "- согласие с рассылкой;\n" +
    "- файл robots.txt (до 32 KB);\n" +
    "- файл sitemap.xml (до 50_000 ссылок);\n" +
    "- размер html страницы до 500 КВ.\n\n" +
    "<b>страница 404</b>\n" +
    "- совпадает с дизайном сайта;\n" +
    "- содержит ссылки на главную, другие разделы и полезные материалы;\n" +
    "- содержит поиск по сайту;\n" +
    "- отображает нестандартное, возможно, приправленное долей юмора сообщение и изображение.\n\n" +
    "<b>едирект на главную страницу</b>\n" +
    "- http(s)://siteName\n" +
    "- http(s)://siteName/\n" +
    "- http(s)://www.siteName\n" +
    "- http(s)://www.siteName/\n" +
    "- http(s)://siteName/index.html\n" +
    "- http(s)://siteName.index.php\n\n" +
    "<b>рекомендации</b>\n" +
    "- теги Title, Description и Keywords следует располагать сразу после открывающегося тега head;\n" +
    "- CSS-стили и Java-скрипты необходимо выносить в отдельные файлы с расширением css и js. В противном случае технический код будет увеличивать объем страницы и негативно влиять на скорость ее загрузки;\n" +
    "- весь ненужный код – счетчики статистики (liveinternet, rambler top100, bigmir и т.п.), формы голосований и опросов, отправки заявки или поиска товара, логин-панель — следует закрыть от индексации;\n" +
    "- важно удалять из исходного кода комментарии верстальщиков к разным элементам, т.к. это увеличивает объем страницы и увеличивает скорость ее загрузки;\n" +
    "- правильно формировать парные теги – если тег был открыт, его обязательно нужно закрыть;\n" +
    "- устаревшие теги, которые уже не поддерживаются, следует исключить из кода, заменив на универсальный тег div. Примеры таких тегов: applet, acronym, bgsound, dir, frame, frameset, noframe, isindex, listing, xmp, nextid, noembed, plaintext, rb, strike, basefont, big, blink, center, font, marquee, multicol, nobr, spacer, tt, u;\n" +
    "- прописывать атрибут alt для всех изображений;\n" +
    "- для атрибутов ширины и высоты в элементе img нужно указывать только цифры без «px»;\n" +
    "- из кода необходимо удалять все скрытые от поисковых систем средствами CSS-форматирования элементы. К наиболее часто встречающимся элементам этой категории относятся «display:none» и «visibility:hidden»;\n" +
    "- корректная конструкция тега noindex выглядит следующим образом: &lt;!–noindex–&gt;Текст или код, который нужно исключить из индексации&lt;-/noindex–&gt;. Не следует использовать конструкцию [noindex]Текст или код, который нужно исключить из индексации[/noindex].";

  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run10(ctx) {
  let answer =
    "<b>Бот</b>\n\n" +
    "Версии: мобильная (Android, iOS), web, desctop.\n\n" +
    "- подключение, удаление бота;\n" +
    "- что умеет бот, описание;\n" +
    "- команды через бот-меню, через бот-клавиатуру, через бот-строку;\n" +
    "- бот-ответ на неправильно введенную команду;\n" +
    "- рассылка при блокирующем пользователе (удалил бот);\n" +
    "- контент: текст, картинки, видео, даты, суммы, разделители;\n\n" +
    "- функциональность:\n" +
    "    - логика переходов-возвратов (отсутствие тупиков);\n" +
    "    - корректность расчетов;\n" +
    "    - база пользователей, рассылка по шедулеру.\n\n" +
    "- защищенность:\n" +
    "    - разделение контента по ролям.\n\n" +
    "- нагрузка:\n" +
    "    - рассылка 10_000 пользователям.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run11(ctx) {
  let answer =
    "<b>Android</b>\n\n" +
    "- наличие вертикального скрола для прочтения всей статьи, всего списка;\n" +
    "- выход приложения из режима сворачивания, при звонке, закрытия, удаления;\n" +
    "- хранение, отображение больших объемов данных (картинки);\n" +
    "- сохранение данных, состояния при повороте экрана;\n" +
    "- настройки пользователя (меню, цвет, язык);\n" +
    "- адаптивность (телефон, планшет).";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run12(ctx) {
  let answer =
    "<b>Операционные системы</b>\n\n" +
    "<b>Windows</b>\n" +
    "XP, 7, 8, 10, 11\n\n" +
    "<b>Linux Kernel</b>\n" +
    "Ubuntu\n" +
    "CentOS, Mint, Debian\n" +
    "Android (for mobile)\n\n" +
    "<b>Darwin</b>\n" +
    "macOS (for leptop, desktop)\n" +
    "iOS (for mobile)\n\n" +
    "<b>virtualization</b>\n" +
    "VirtualBox (for OS)\n" +
    "Selenium Hub (for browsers)\n" +
    "Docker (virtualMachineImage)\n\n";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run13(ctx) {
  let answer =
    "<b>Элементы управления</b>\n\n" +
    "<b>элементы ввода</b>\n" +
    "- формы;\n" +
    "- списки;\n" +
    "- время, дата;\n" +
    "- переключатели.\n\n" +
    "<b>элементы вывода</b>\n" +
    "- таблицы;\n" +
    "- графики;\n" +
    "- файлы.\n\n" +
    "<b>элементы навигации</b>\n" +
    "- слайдер;\n" +
    "- поиск;\n" +
    "- «хлебные крошки»;\n" +
    "- пейдженация.\n\n" +
    "<b>информационные элементы</b>\n" +
    "- полоса загрузки;\n" +
    "- подсказки;\n" +
    "- сообщения.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run14(ctx) {
  let answer =
    "<b>Верстка</b>\n\n" +
    "- favicon;\n" +
    "- кодировка (UTF8, Windows1251);\n" +
    "- общий дизайн интерфейса (логотип, корпоративные цвета);\n" +
    "- наличие всех элементов, их размер и цвет, расположение в соответствии макету;\n" +
    "- вертикальное, горизонтальное выравнивание элементов, их взаимное расположение;\n" +
    "- единый формат заголовков, кнопок, фильтров;\n" +
    "- название элементов;\n" +
    "- правильность шрифтов (название, размер);\n" +
    "- цвета интерфейса;\n\n" +
    "- кликабельность логотипа, меню, кнопок, ссылок;\n" +
    "- кликабельность, выбираемость, вводимость, удаляемость данных в полях;\n" +
    "- очистка введенных значений при клике на крестик в правой части поля;\n\n" +
    "- кнопка F5;\n" +
    "- браузерная кнопка НАЗАД;\n" +
    "- переходы с помощью TAB;\n" +
    "- работа Enter, как кнопки;\n\n" +
    "- отсутствие горизонтального скролла (для статичных страниц минимальная ширина 800рх);\n" +
    "- масштабируемость окна браузера (на весь экран, ½, ¼, 80% экрана);\n" +
    "- масштабируемость страницы (75-200%);\n" +
    "- изменение размера элемента (поле textarea);\n\n" +
    "- доступность информации:\n" +
    "    - отключить стили, скрипты (css, js);\n" +
    "    - отключить картинки (отображается альтернативный текст);\n" +
    "    - отключить Flesh, Turbo;\n" +
    "    - отключить, включить браузерные расширения (AdBlock);\n" +
    "    - увеличенный размер шрифта;\n" +
    "    - монохромный экран.\n\n" +
    "- параметры печати.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run15(ctx) {
  let answer =
    "<b>Модальное окно</b>\n\n" +
    "- текст;\n" +
    "- скрол;\n" +
    "- закрытие окна (Esc, x, button).";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run16(ctx) {
  let answer =
    "<b>Слайдер</b>\n\n" +
    "- размер слайда;\n" +
    "- количество слайдов;\n" +
    "- частота обновления (паузы);\n" +
    "- зацикленность показа;\n" +
    "- ручное переключение.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run17(ctx) {
  let answer =
    "<b>Ползунок</b> — применяется для изменения размера изображения или когда не важно указывать точное значение.\n\n" +
    "- название, количество элементов, шрифт, цвет, размер, расположение;\n" +
    "- значение по дефолту, кликабельность;\n" +
    "- шаг ползунка и плавность изменения данных;\n" +
    "- граничные значения: min, max, (max/2), (min+1), (max-1).";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run18(ctx) {
  let answer =
    "<b>Таблица</b>\n\n" +
    "- шрифт, цвет, размер, расположение;\n" +
    "- горизонтальный скрол для таблицы, а не страницы;\n" +
    "- количество, название колонок, строк;\n" +
    "- значения в колонке одного типа в предусмотренном формате;\n" +
    "- отображение данных:\n" +
    "    - единица измерения, размерность;\n" +
    "    - разделитель дробной части (точка, запятая);\n" +
    "    - разделитель разрядов (пробел, без пробела);\n" +
    "    - длина дробной части (1 или 2 знака);\n" +
    "    - особенности расчета (если план = 0, тогда % выполнения не считать и выводить прочерк);\n" +
    "    - количество строк на странице;\n" +
    "    - вложенность, схлопывание.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run19(ctx) {
  let answer =
    "<b>Список</b>\n\n" +
    "- шрифт, цвет, размер, расположение;\n" +
    "- горизонтальный, вертикальный скрол;\n" +
    "- количество, название элементов;\n" +
    "- порядок отображения, сортировки.\n\n" +
    "Ctrl + Shift позволяет выбрать одно или несколько значений.\n\n" +
    "Для списка с единственным выбором - выбрать один элемент из множества.\n\n" +
    "Для списка с мультивыбором - проверить граничные значения: min, max, (max/2), (min+1), (max-1).";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run20(ctx) {
  let answer =
    "<b>Переключатель</b>\n\n" +
    "- шрифт, цвет, размер, расположение;\n" +
    "- количество, название элементов;\n" +
    "- значение по дефолту.\n\n" +
    "<b>Радиокнопки</b> — позволяет выбрать один единственный вариант из предложенного списка. Группа радиокнопок, рассматривается как единый объект, который может быть только в одном из предложенных состояний. Необходимо проверить каждое состояние.\n\n" +
    "- любое значение можно выбрать;\n" +
    "- можно выбрать только 1 значение;\n" +
    "- можно ли не выбрать ни одного?\n\n\n" +
    "<b>Чекбоксы</b> — позволяет выбрать любое количество вариантов из предложенного списка. Группа чекбоксов, рассматривается как единый объект, который может быть в (max! + 2) состояниях.\n\n" +
    "- любое значение можно выбрать;\n" +
    "- можно выбрать любое количество значений;\n" +
    "- можно ли не выбрать ни одного?\n" +
    "- граничные значения: min, max, (max/2), (min+1), (max-1).";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run21(ctx) {
  let answer =
    "<b>Календарь</b> — позволяет установить год, месяц, число путем выбора значения. Ввод значений невозможен. Обычно используется стороннее приложение.\n\n" +
    "- шрифт, цвет, размер, расположение;\n" +
    "- значение по дефолту;\n" +
    "- выбор даты в будущем, в прошлом.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run22(ctx) {
  let answer =
    "<b>Файл</b>\n\n" +
    "- тип (расширение);\n" +
    "- название (допустимые символы, длина);\n" +
    "- размер и кодировка;\n" +
    "- разделитель полей (запятая, TAB, точка с запятой);\n" +
    "- язык представления данных (английский, китайский);\n" +
    "- корректность данных;\n" +
    "- права на редактирование, удаление;\n" +
    "- сообщения во время экспорта, импорта.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run23(ctx) {
  let answer =
    "<b>Поиск</b>\n\n" +
    "- от 3-х символов;\n" +
    "- часть слова;\n" +
    "- точное слово;\n" +
    "- очная фраза;\n\n" +
    "- аббревиатуры;\n" +
    "- словосочетание;\n" +
    "- несколько неполных слов;\n" +
    "- спецсимволы;\n" +
    '- цифры (&gt;0, &lt;0, ноль, целые, дробные, специальные значения - "Infinity");\n' +
    "- регистр ввода;\n" +
    "- различные языки, раскладки;\n" +
    "- пустое значение;\n" +
    "- морфология;\n\n" +
    "- анализ граничных значений и классы эквивалентности для длины;\n" +
    "- поиск по всем полям;\n" +
    "- поиск по некоторым полям;\n" +
    "- поиск без заполнения обязательных полей;\n" +
    "- поиск по обязательным полям;\n" +
    "- учет разнообразных параметров.";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

function run24(ctx) {
  let answer =
    "<b>Поле</b>\n\n" +
    "- placeholder;\n" +
    "- ввод с клавиатуры;\n" +
    "- вставка из буфера (через контекстное меню, горячие клавиши: Ctrl+V, alt+код);\n" +
    "- ввод с экранной клавиатуры;\n" +
    "- редактирование, копирование;\n" +
    "- символы конца строки: \\n, \\r;\n" +
    "- перенос строки;\n" +
    "- очистка поля через Esc, Delete, Backspace;\n" +
    "- очистка поля через кнопку приложения.\n\n" +
    "<b>текстовое поле</b>\n" +
    "- буквы, цифры, специальные символы;\n" +
    "- длина строки;\n" +
    "- текст с пробелом: в начале, середине, конце, только пробел;\n" +
    "- не ASCII символы (смайлики).\n\n" +
    "<b>числовое поле</b>\n" +
    "- &gt;0, &lt;0, ноль;\n" +
    "- целые, дробные;\n" +
    "- степени двойки;\n" +
    "- научная запись чисел (1Е-10);\n" +
    "- вычисляемые выражения (2+3).\n\n" +
    "<b>время, дата</b>\n" +
    "- границы минуты, часа, дня, недели, месяца, года, столетия;\n" +
    "- переход на зимнее, летнее время;\n" +
    "- несуществующие значения (30 февраля);\n" +
    "- часовые пояса;\n" +
    '- соотношение с "сейчас";\n' +
    "- несколько связанных дат (с 01.01 - по 31.01).\n\n" +
    "<b>нестандартный ввод</b>\n" +
    "'; SELECT *\n" +
    "&lt;!--abc&gt;\n" +
    '&lt;script&gt;alert("Alert text")&lt;/script&gt;\n' +
    "\"[|]'~&lt;!--@$%^&#*/()?&gt;,.\\";
  ctx.replyWithHTML(answer, {
    reply_markup: {
      keyboard: keyboard.main,
      resize_keyboard: true,
    },
  });
}

module.exports.run1 = run1;
module.exports.run2 = run2;
module.exports.run3 = run3;
module.exports.run4 = run4;
module.exports.run5 = run5;
module.exports.run6 = run6;
module.exports.run7 = run7;
module.exports.run8 = run8;
module.exports.run9 = run9;
module.exports.run10 = run10;
module.exports.run11 = run11;
module.exports.run12 = run12;
module.exports.run13 = run13;
module.exports.run14 = run14;
module.exports.run15 = run15;
module.exports.run16 = run16;
module.exports.run17 = run17;
module.exports.run18 = run18;
module.exports.run19 = run19;
module.exports.run20 = run20;
module.exports.run21 = run21;
module.exports.run22 = run22;
module.exports.run23 = run23;
module.exports.run24 = run24;
